input,
button,
.button,
label {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: Arial, sans-serif;
}

:root {
  --fontColor: #444;
  --segmentSelectedTextColor: #444;
  --primaryColor: #ececec;
  --secondaryColor: #d2d5e22b;
  --accentColor: #e91e63;
  --buttonColor: linear-gradient(to left,#cdcdcd, #ffffff);
  --scrollbar-track-color: transparent;
  --scrollbar-color: rgba(0, 0, 0, 0);

  --scrollbar-size: 0.375rem;
  --scrollbar-minlength: 1.5rem; /* Minimum length of scrollbar thumb (width of horizontal, height of vertical) */
}
$defaultDuration: 0.3s;
$primaryColour: #1e90ff;
$secondaryColour: #fff;
$shadowColour: rgba(0, 0, 0, 0.16);



.segmented-controls {
    margin-bottom:30px;
    border-radius: 1.5rem/* 24px */;

}
.segmented-controls.round {
    border-radius: 1.5rem/* 24px */;
}
.segmented-controls.square {
    border-radius: 1.5rem/* 24px */;
  
}
.segmented-controls.small.square {
  max-width: 150px;
  border-radius: 2rem!important;
  background-color: rgba(255, 255, 255, 0.1);
}



.segmented-controls.small label {

  font-size:14px!important;
}

.segmented-controls.small label:last-of-type::after {

  font-size:14px!important;
}
.segmented-controls.medium {
  max-width: 240px;
}
section {
  display: inline-block;
  margin: auto;
  max-width: 480px;
  min-width: 150px;
  width: fit-content;
}

.fivefilter{
    min-width: 100%;
   
}

.segmented-controls.small {
    padding:6px;
  }
/*
 * Container
 */
.segmented-controls {
  background: #00000030;
  display: flex;
  flex-wrap:wrap;
  margin: 0 auto;
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;


}



/*
 * Vissualy hidden radiobuttons
 */
.segmented-controls input {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap;
  font-weight: 600;
  /* added line */
}

/* 
 * Labels need to be the same size
 */
.segmented-controls label {
  grid-row: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  cursor: pointer;
  flex: 1 1 0px;
  position: relative;
  z-index: 2;
  transition: inherit;
  font-weight: 600;
  padding: 10px;
}

/* 
 * Adjust z-index of last label since that contains 
 * the paddle that needs to go beneath all other labels 
 */
.segmented-controls label:last-of-type {
  z-index: 1;
}

/*
 * Paddle 
 */
.segmented-controls label:last-of-type::after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: -2;
  background-color: var(--buttonColor);
  transition: inherit;
}

/*
 * Move paddle depending on which option is selected
 */
@for $i from 1 through 9 {
  .segmented-controls
    input:nth-last-of-type(#{$i + 1}):checked
    ~ label:last-of-type::after {
    transform: translateX($i * -100%);
  }
}

/*
 * Labels 
 */
.segmented-controls label {
  font-size: 0.8125rem;
  line-height: 1;
}

/*
 * Dividers
 */
.segmented-controls label:not(:first-of-type)::before {
  content: "";
  position: absolute;
  z-index: -3;
  top: 0.35rem;
  left: 0;
  bottom: 0.35rem;
  width: 0.5px;
  background: rgba(100, 100, 100, 0.1);
  transition: inherit;
}

/*
 * Selected option 
 */
.segmented-controls input:checked + label {
  font-weight: 800;
  color: var(--segmentSelectedTextColor);
}

/*
 * Hide dividers before and after the selected option
 */
.segmented-controls input:checked + label::before,
.segmented-controls input:checked + label + input + label::before {
  opacity: 0;
}

/*
 * Focus style for keyboard navigation
 */
.segmented-controls:focus-within {
}

/*
 * Paddle
 */
.segmented-controls.round label:last-of-type::after {
  background: var(--buttonColor);
  border-radius: 13px;
  //  border: 1px solid rgba(100, 100, 100, 0);
  //  box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.004), 0px 3px 8px rgba(0, 0, 0, 0.012);
}
.segmented-controls.square label:last-of-type::after {
  background: var(--buttonColor);
  border-radius: 3000px;
  color:white
  //  border: 1px solid rgba(100, 100, 100, 0);
  //  box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.004), 0px 3px 8px rgba(0, 0, 0, 0.012);
}

.segmented-controls.small.square label:last-of-type::after {
  background: var(--buttonColor);
  border-radius: 3000px;
  //  border: 1px solid rgba(100, 100, 100, 0);
  //  box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.004), 0px 3px 8px rgba(0, 0, 0, 0.012);
}

.segmented-controls.small.square label:first-of-type::after {
  background: var(--buttonColor);
  border-radius: 3000px;
  //  border: 1px solid rgba(100, 100, 100, 0);
  //  box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.004), 0px 3px 8px rgba(0, 0, 0, 0.012);
}
// etc
.grid-autofit {
  padding: 1rem;
  display: grid;
  height: fit-content;
  grid-gap: 0.25rem;
  grid-template-columns: repeat(auto-fit, minmax(170px, 0.8fr));
}
.grid-autofit > * {
  background-repeat: no-repeat;
  background-size: cover;
  object-fit: cover;
  height: 170px;
  display: grid;
  place-items: center;
  background: var(--secondaryColor);
  border-radius: 3000px;
}
//buttons
button.btn {
  background-color: var(--buttonColor);
  transition: inherit;
}
/* Bubble Right */
$tipWidth: 16px; //the width of the speech bubble tip
$tipHeight: 11px; //the height of the speech bubble tip
$tipColour: $primaryColour;
.button {
  font-size: 0.8125rem;
  font-family: -apple-system, BlinkMacSystemFont, sans-serif;
  font-weight: 400;
  line-height: 1;
  height: fit-content;
  width: fit-content;
  padding: 0.5rem;
  min-height: 1.65rem;
  max-height: 1.65rem;
  height: 1.65rem;
  cursor: pointer;
  background: $primaryColour;
  text-decoration: none;
  color: $secondaryColour;
}
.bubble-right {
  position: relative;
  border-radius: 3000px;
  &:before {
    display: inline-grid;
    pointer-events: none;
    position: absolute;
    z-index: -1;
    content: "";
    border-style: solid;
    text-align: center;
    transition-duration: $defaultDuration;
    transition-property: right;
    top: calc(50% - #{$tipHeight});
    right: 0;
    border-radius: 0 4px 4px 0;
    border-width: $tipHeight 0 $tipHeight $tipWidth;
    border-color: $tipColour $tipColour $tipColour $tipColour;
    right: -($tipWidth);
  }
}
.bubble-right svg {
  position: relative;
  right: -20px;
  width: 9px;
  height: 9px;
  fill: #fff;
}
.tag {
  font-size: 1.4rem;
  width: fit-content;
  margin: 28px;
  padding: 0.5rem;
  text-align: center;
  display: flex;
  align-items: center;
  border: 1px solid;
  line-height: 1;
  white-space: nowrap;
  user-select: none;
  cursor: default;
}
.tag__remove {
  padding-left: 0.75rem;
  font-size: 1.2em;
  margin-inline-start: var(--sl-spacing-2x-small);
  margin-inline-end: calc(-1 * var(--sl-spacing-x-small));
}



.segmented-controls input:checked + label {
    font-weight: 800!important;
    color: var(--segmentSelectedTextColor);
    border-radius: 3000px!important; /* Ajoutez le style de bord arrondi ici */
    padding-top:15px;
    padding-bottom:15px;
    transition:0.2s ease-in-out

  }

  .segmented-controls input + label{
    padding-top:18px;
    padding-bottom:18px;
    font-size:1rem;
    font-family: 'ClashDisplay';
    color:#ffffff80;
    font-weight:300;
    transition:0.2s ease-in-out;
    letter-spacing: 2px;
    text-transform: uppercase;
  }
  .segmented-controls input + label:hover{

    color:#ffffff;
  }

  .segmented-controls.small input:checked + label {
    color: var(--segmentSelectedTextColor);
    border-radius: 3000px!important; /* Ajoutez le style de bord arrondi ici */
    padding-top:8px;
    padding-bottom:8px;
  }

  .segmented-controls input:checked + label:hover {color:black;  font-weight:800; 
   
  }

  .segmented-controls.small input + label{
    padding-top:8px;
    padding-bottom:8px;
    font-size:1rem;
    font-family: 'SanFrancisco';

  }

  .container {
    display: grid;
    columns: 3;
    flex-direction: row;
    width: 100%;
  }
  
  .item {
    box-sizing: border-box;
    overflow: hidden;
    width: 100%;
    border-radius: 20px;
    box-shadow: 0px 2px 24px rgba(0, 72, 138, .12);
    background: #fff;
    transition: all .2s 0s ease;
  
    &:hover {
      transform: translateY(-2px);
      box-shadow: 0px 4px 32px rgba(0, 72, 138, .32);
    }
  
    .thumbnail {
      height: 160px;
      overflow: hidden;
      background-color: #4b4b4b;
      position: relative;
  
      .img {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background-size: contain;
        background-repeat: no-repeat;
        background-position: center;
        z-index: 2;
        filter: drop-shadow(0 0 20px rgba(0,0,0,.2));
      }
  
      .background {
        position: absolute;
        top: -20px;
        right: -20px;
        bottom: -20px;
        left: -20px;
        background-repeat: no-repeat;
        background-position: center;
        filter: blur(10px);
        opacity: 0.85;
      }
    }
  
    span {
      display: block;
      box-sizing: border-box;
      font-size: 16px;
      width: 100%;
      padding: 16px 24px;
      font-family: 'SanFrancisco';
    }
  }


  
  .img1 {
    background-image: url('/reactflix.webp');
  }
  
  .background1 {
    background-image: url('/reactflix.webp');
  }
  
  .img2 {
    background-image: url('/ubereats.webp');
  }
  
  .background2 {
    background-image: url('/ubereats.webp');
  }
  
  .img3 {
    background-image: url('/kasa.webp');
  }
  
  .background3 {
    background-image: url('/kasa.webp');
  }


  .segmented-controls {
    display: flex;
    flex-wrap: wrap;
  }


  /* Styles sp√©cifiques aux mobiles */
  @media (max-width: 1150px) {
  
  
    .segmented-controls label {
      padding: 10px 20px;
      flex: none;
    }

    .segmented-controls{
      flex-wrap: wrap;
      justify-content: center;
      gap:10px 0px;
          }

    .segmented-controls.square{
padding:20px 
    }
  
    .segmented-controls label:last-of-type::after {
      transform: translateY(0);
      display: none;
    }
  
    .segmented-controls input:nth-last-of-type(6):checked ~ label:last-of-type::after {
      transform: translateY(100%);      display: none;

    }
  
    .segmented-controls input:nth-last-of-type(5):checked ~ label:last-of-type::after {
      transform: translateY(200%);      display: none;

    }
  
    .segmented-controls input:nth-last-of-type(4):checked ~ label:last-of-type::after {
      transform: translateY(300%);      display: none;

    }
  
    .segmented-controls input:nth-last-of-type(3):checked ~ label:last-of-type::after {
      transform: translateY(400%);      display: none;

    }
  
    .segmented-controls input:nth-last-of-type(2):checked ~ label:last-of-type::after {
      transform: translateY(500%);      display: none;

    }
  
    .segmented-controls input:last-of-type:checked ~ label:last-of-type::after {
      transform: translateY(600%);      display: none;

    }
  
    /* Ajout de la classe active pour changer le fond en blanc */
    .segmented-controls input:checked + label {
      background-color: white;
      color: black;
    }
  }
  